!function(){var e=angular.module("choreIt",["ui.router"]);e.config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("home",{url:"/home",templateUrl:"/home.html",controller:"MainCtrl",controllerAs:"main",resolve:{groupPromise:["chores",function(e){return e.getAllGroups()}]}}).state("login",{url:"/login",templateUrl:"/login.html",controller:"AuthCtrl",controllerAs:"auth",onEnter:["$state","auth",function(e,o){o.isLoggedIn()&&e.go("home")}]}).state("register",{url:"/register",templateUrl:"/register.html",controller:"AuthCtrl",controllerAs:"auth",onEnter:["$state","auth",function(e,o){o.isLoggedIn()&&e.go("home")}]}),o.otherwise("home")}])}(),function(){var e=angular.module("choreIt");e.controller("AuthCtrl",["$state","auth",function(e,o){var t=this;t.user={},t.register=function(){o.register(t.user)["catch"](function(e){t.error=e,console.log(e)}).then(function(){t.error||e.go("home")})},t.logIn=function(){o.logIn(t.user)["catch"](function(e){t.error=e,console.log(e.data.message)}).then(function(){t.error||e.go("home")})}}])}(),function(){var e=angular.module("choreIt");e.factory("auth",["$window","$http",function(e,o){var t={};return t.getToken=function(){return e.localStorage["choreIt-token"]},t.saveToken=function(o){e.localStorage["choreIt-token"]=o},t.logOut=function(){e.localStorage.removeItem("choreIt-token")},t.register=function(e){return o.post("/register",e).then(function(e){e.data.token&&t.saveToken(e.data.token)})},t.logIn=function(e){return console.log(e),o.post("/login",e).then(function(e){e.data.token&&t.saveToken(e.data.token)})},t.isLoggedIn=function(){var o=t.getToken();if(o){var r=JSON.parse(e.atob(o.split(".")[1]));return r.exp>Date.now()/1e3}return!1},t.currentUser=function(){if(t.isLoggedIn()){var o=t.getToken(),r=JSON.parse(e.atob(o.split(".")[1]));return r.username}},t}])}(),function(){angular.module("choreIt")}(),function(){var e=angular.module("choreIt");e.factory("chores",["$http","auth",function(e,o){var t={groups:[]};return t.getAllGroups=function(){return e.get("/groups",{headers:{Authorization:"Bearer "+o.getToken()}}).then(function(e){angular.copy(e.data,t.groups)})},t.addGroup=function(r){return e.post("/groups",r,{headers:{Authorization:"Bearer "+o.getToken()}}).then(function(e){t.groups.push(e.data)})},t.deleteGroup=function(t){return e["delete"]("/groups/"+t,{headers:{Authorization:"Bearer "+o.getToken()}})},t.addChore=function(t,r){return e.post("/groups/"+t+"/chore",r,{headers:{Authorization:"Bearer "+o.getToken()}})},t.deleteChore=function(t,r){return e["delete"]("/groups/"+t+"/chores/"+r,{headers:{Authorization:"Bearer "+o.getToken()}})},t}])}(),function(){var e=angular.module("choreIt");e.controller("MainCtrl",["$scope","chores","auth",function(e,o,t){var r=this;r.groups=o.groups,r.groups&&(r.activeGroup=r.groups[0]),r.setActiveGroup=function(e){r.activeGroup=e},r.addChore=function(){var e=r.activeGroup._id;o.addChore(e,{body:r.newChore}).then(function(e){r.activeGroup.chores.push(e.data)}),r.newChore=""},r.toggleComplete=function(e){e.complete=!e.complete},r.addGroup=function(){if(console.log(r.newGroup),r.newGroup&&""!=r.newGroup){var e={};t.isLoggedIn()?(e.title=r.newGroup,e.username=t.currentUser(),o.addGroup(e),r.newGroup=""):console.log("You must be logged in to add a group")}},r.deleteGroup=function(e){o.deleteGroup(e._id).then(function(){console.dir(r.groups.indexOf(e)),r.groups.splice(r.groups.indexOf(e),1),e==r.activeGroup&&(r.activeGroup=null)})},r.deleteChore=function(e){var t=r.activeGroup;o.deleteChore(t._id,e._id).then(function(){t.chores.splice(t.chores.indexOf(e),1)})}}])}(),function(){var e=angular.module("choreIt");e.controller("NavCtrl",["auth",function(e){var o=this;o.isLoggedIn=e.isLoggedIn,o.currentUser=e.currentUser,o.logOut=e.logOut}])}();